import os
import pandas
from base import *
from WhiskersTableHandler import WhiskersTableHandler
from EdgesHandlers import AllEdgesHandler, EdgeSummaryHandler
from ColorizedWhiskerEnds import ColorizedWhiskerEndsHandler
from TacHandler import TacHandler, ClusteredTacHandler
from ContactsSummaryHandlers import (
    ContactsSummaryHandler, ColorizedContactsSummaryHandler)

# For making colorized video
import numpy as np
import tables
import whiskvid
import MCwatch.behavior
import WhiskiWrap

class MonitorVideoHandler(CalculationHandler):
    """Handler for a monitor video generated by WhiskiWrap trace.
    
    Unlike other handlers, this data is a side effect of trace, so
    this would be set by another calculation.
    
    load_data is not implemented
    """
    _db_field_path = 'monitor_video'
    _name = 'monitor_video'
    
    # Override because it's not just _name
    @property
    def new_path(self):
        return self.video_session.name + '.mkv'

## Handlers for data that haven't been incorporated into the database yet
# This is useful for existing datasets that aren't in the database
# and also because sometimes it's just not worth modifying the database
# The path is hard-coded in the new_path method of each
class CalculationHandlerWithoutDb(CalculationHandler):
    """Overload for data not in db
    
    """
    @property
    def get_path(self):
        """Assumes self.new_path is the name, checks if it exists, returns

        Raises IOError if the file doesn't exist
        """
        full_filename = os.path.join(self.video_session.session_path,
            self.new_path)
        if not os.path.exists(full_filename):
            raise IOError("file does not exist: %s" % full_filename)
        return full_filename
    
    def set_path(self):
        """Return without doing anything, because this is not in the db.
        
        This is so that inherited methods like save_data work.
        
        Returns: None, rather thatn self.new_path, to indicate that
        nothing was done.
        """
        #~ raise NotImplementedError(
            #~ "set_path not available because this calculation is not in the db")
        
        return

class VideoTrackedWhiskersHandler(CalculationHandlerWithoutDb):
    """Tracked whiskers video. Side effect of trace"""
    _name = 'video_tracked_whiskers'

    # Override because it's not just _name
    @property
    def new_path(self):
        return self.video_session.name + '.tracked_whiskers.mkv'

class ColorizationKeystoneInfoHandler(CalculationHandlerWithoutDb):
    """Information about keystone frame
    
    Saves as a pickled DataFrame, so no need to override any methods.
    """
    _name = 'colorization_keystone_info'

